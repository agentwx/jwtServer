user nginx nginx;

worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /opt/openresty/nginx/conf/mime.types;
    default_type text/html;
    charset  utf-8;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile           on;
    tcp_nopush         on;
    tcp_nodelay        on;

    keepalive_timeout  60;

    gzip               on;
    gzip_vary          on;

    gzip_comp_level    6;
    gzip_buffers       16 8k;

    gzip_min_length    1000;
    gzip_proxied       any;
    gzip_disable       "msie6";

    gzip_http_version  1.0;

    gzip_types         text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;

    lua_package_path "/?.lua;/?/init.lua;/mnt/hgfs/manager/jwtServer/lua/waf/?.lua;;";


     init_by_lua_file  "/mnt/hgfs/manager/jwtServer/lua/waf/init.lua";
     server {
        
         server_name localhost;
         listen 80;
         set $node_port 8360;


         index index.js index.html index.htm;
         if ( -f $request_filename/index.html ){
            rewrite (.*) $1/index.html break;
         }




        #access_by_lua_file /mnt/hgfs/manager/jwtServer/lua/waf/waf.lua;

        location ~* \.(gif|jpg|jpeg|png|html|htm|css|js|ico)$ {
             # 静态资源目录
             root /mnt/hgfs/manager/jwtServer/html;
        }


         location = /sign {
                content_by_lua_file lua/sign.lua;
         }


         location / {
                # 加入jwt权限验证
                access_by_lua_file lua/waf/waf.lua;
                # 如果jwt检查权限没问题就反向代理到后台服务
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_pass http://127.0.0.1:$node_port$request_uri;
                proxy_redirect off;
         }




    }
}

